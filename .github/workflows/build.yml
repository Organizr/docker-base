name: Build Container
on:
  push:
    paths:
      - "*.Dockerfile"
      - "root/*"
      - ".github/workflows/build.yml"
  schedule:
    - cron: "0 20 1,15 * 5"
jobs:
  build-and-push-container:
    runs-on: ubuntu-latest

    env:
      BUILDKIT_HOST: tcp://0.0.0.0:1234
      DOCKER_CLI_EXPERIMENTAL: enabled
      PLATFORM_1: amd64
      PLATFORM_2: arm
      PLATFORM_3: arm64

    steps:
      - uses: actions/checkout@v2
      - name: Create VARS
        env:
          _repo: ${{github.repository}}
          _ref: ${{github.ref}}
        id: vars
        run: |
          echo "::set-output name=branch::$(echo ${_ref} | cut -d/ -f3)"
          echo "::set-output name=username::$(echo ${_repo} | cut -d/ -f1 | tr '[:upper:]' '[:lower:]')"
          echo "::set-output name=repo::$(echo ${_repo//docker-/} | tr '[:upper:]' '[:lower:]')"
      - name: Print VARS
        run: |
          echo "${{ steps.vars.outputs.branch }} && ${{github.ref}}"
          echo "${{ steps.vars.outputs.username }} && ${{github.repository}}"
          echo ${{ steps.vars.outputs.repo }}

      - name: Getting buildkit
        run: |
          sudo docker run --privileged linuxkit/binfmt:v0.7
          sudo docker run -d --privileged -p 1234:1234 --name buildkit moby/buildkit:latest --addr ${BUILDKIT_HOST} \
          --oci-worker-platform linux/${PLATFORM_1} \
          --oci-worker-platform linux/${PLATFORM_2} \
          --oci-worker-platform linux/${PLATFORM_3}
          sudo docker cp buildkit:/usr/bin/buildctl /usr/bin/

      - name: Build amd64
        env:
          DOCKERFILE_LOCATION: ./amd64.Dockerfile
        run: |
          buildctl build --frontend dockerfile.v0 \
          --opt platform=linux/${PLATFORM_1} \
          --opt filename=./${DOCKERFILE_LOCATION} \
          --output type=docker,name=${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_1} \
          --local dockerfile=. \
          --local context=. | docker load

      - name: Build armhf
        env:
          DOCKERFILE_LOCATION: ./armhf.Dockerfile
        run: |
          buildctl build --frontend dockerfile.v0 \
          --opt platform=linux/${PLATFORM_2} \
          --opt filename=./${DOCKERFILE_LOCATION} \
          --output type=docker,name=${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_2} \
          --local dockerfile=. \
          --local context=. | docker load

      - name: Build arm64
        env:
          DOCKERFILE_LOCATION: ./armhf.Dockerfile
        run: |
          buildctl build --frontend dockerfile.v0 \
          --opt platform=linux/${PLATFORM_3} \
          --opt filename=./${DOCKERFILE_LOCATION} \
          --output type=docker,name=${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_3} \
          --local dockerfile=. \
          --local context=. | docker load

      - name: Login to registry
        if: github.event_name != 'pull_request' && contains(github.ref, 'actions') != 'true'
        env:
          DOCKER_USERNAME: roxedus
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Publish images
        if: github.event.issue.pull_request != 'false' && github.ref == 'refs/heads/master'
        run: |
          docker push ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_1}
          docker push ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_2}
          docker push ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_3}

      - name: Create :latest manifest
        if: github.event.issue.pull_request != 'false' && github.ref == 'refs/heads/master'
        run: |
          docker manifest create ${{ steps.vars.outputs.repo }}:latest \
            ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_1} \
            ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_2} \
            ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_3}
          docker manifest push ${{ steps.vars.outputs.repo }}:latest

      - name: Create day manifest
        if: github.event.issue.pull_request != 'false' && github.ref == 'refs/heads/master'
        run: |
          export CURRENT_TIME=$(date --utc +%Y-%m-%d_%H)
          docker manifest create ${{ steps.vars.outputs.repo }}:${CURRENT_TIME} \
            ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_1} \
            ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_2} \
            ${{ steps.vars.outputs.repo }}:${{ steps.vars.outputs.branch }}-${PLATFORM_3}
          docker manifest push ${{ steps.vars.outputs.repo }}:${CURRENT_TIME}
