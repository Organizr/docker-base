name: Build Container
on:
  workflow_dispatch:
  push:
    paths:
      - "*.Dockerfile"
      - "root/**"
      - ".github/workflows/build.yml"
  schedule:
    - cron: "0 20 1,15 * 5"

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        architecture: [linux-arm-v7, linux-arm64, linux-amd64]

    steps:
      - uses: actions/checkout@v2
      - name: Create VARS
        id: vars
        run: |
          declare -A archer
          archer[linux-arm-v7]=armhf
          archer[linux-arm64]=arm64
          archer[linux-amd64]=amd64

          ARCHITECTURE=${{ matrix.architecture }}
          echo "::set-output name=platform::${ARCHITECTURE//-/\/}"
          echo "::set-output name=arch::${archer[${{ matrix.architecture }}]}"
          echo "::set-output name=tag::$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]'):${GITHUB_REF//refs\/heads\//}-${archer[${{ matrix.architecture }}]}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
          version: latest
          driver-opts: image=moby/buildkit:master

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: roxedus
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: roxedus
          password: ${{ secrets.PERSONAL_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: ${{ steps.vars.outputs.platform }}
          file: ./${{ steps.vars.outputs.arch }}.Dockerfile
          tags: |
            ${{ steps.vars.outputs.tag }}
            ghcr.io/${{ steps.vars.outputs.tag }}

  publish:
    runs-on: ubuntu-20.04
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: roxedus
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set Time tag
        id: time
        run: "::set-output name=time::$(date --utc +%Y-%m-%d_%H)"

      - name: Create manifests for DockerHub
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          IMAGE=$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]')
          TAG=${GITHUB_REF//refs\/heads\//}
          SOURCE=$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]'):${GITHUB_REF//refs\/heads\//}

          docker manifest create ${IMAGE}:GHA-{{ steps.time.outputs.time }}             --amend ${SOURCE}-amd64 --amend ${SOURCE}-arm --amend ${SOURCE}-arm64 && docker manifest push ${IMAGE}:${TAG}
          if [[ ${GITHUB_REF//refs\/heads\//} == master ]]; then
          docker manifest create ${IMAGE}:latest                                    --amend ${SOURCE}-amd64 --amend ${SOURCE}-arm --amend ${SOURCE}-arm64 && docker manifest push ${IMAGE}:latest
          fi

      - name: Create manifests for GitHub Container Registry
        env:
          DOCKER_CLI_EXPERIMENTAL: enabled
        run: |
          IMAGE=ghcr.io/$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]')
          TAG=${GITHUB_REF//refs\/heads\//}
          SOURCE=$(echo ${GITHUB_REPOSITORY//docker-/} | tr '[:upper:]' '[:lower:]'):${GITHUB_REF//refs\/heads\//}

          docker manifest create ${IMAGE}:GHA-{{ steps.time.outputs.time }}             --amend ${SOURCE}-amd64 --amend ${SOURCE}-arm --amend ${SOURCE}-arm64 && docker manifest push ${IMAGE}:${TAG}
          if [[ ${GITHUB_REF//refs\/heads\//} == master ]]; then
          docker manifest create ${IMAGE}:latest                                    --amend ${SOURCE}-amd64 --amend ${SOURCE}-arm --amend ${SOURCE}-arm64 && docker manifest push ${IMAGE}:latest
          fi
